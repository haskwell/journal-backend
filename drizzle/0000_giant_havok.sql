CREATE TABLE `JOURNAL` (
	`JOURNAL_ID` text PRIMARY KEY NOT NULL,
	`USER_ID` text NOT NULL,
	`JOURNAL_NUMBER` integer NOT NULL,
	`TITLE` text NOT NULL,
	`DATE_CREATED` text DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (`USER_ID`) REFERENCES `USERS`(`USER_ID`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE UNIQUE INDEX `unique_journal_per_user` ON `JOURNAL` (`USER_ID`,`JOURNAL_NUMBER`);--> statement-breakpoint
CREATE TABLE `PAGES` (
	`PAGE_ID` text PRIMARY KEY NOT NULL,
	`JOURNAL_ID` text NOT NULL,
	`PAGE_NUMBER` integer NOT NULL,
	`TITLE` text NOT NULL,
	`CONTENT` text NOT NULL,
	`MOOD` integer NOT NULL,
	`DATE_CREATED` text DEFAULT CURRENT_TIMESTAMP,
	`DATE_MODIFIED` text DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (`JOURNAL_ID`) REFERENCES `JOURNAL`(`JOURNAL_ID`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE UNIQUE INDEX `unique_page_per_journal` ON `PAGES` (`JOURNAL_ID`,`PAGE_NUMBER`);--> statement-breakpoint
CREATE TABLE `SHARED_PAGES` (
	`SHARING_ID` text PRIMARY KEY NOT NULL,
	`SHARED_FROM_USER_ID` text NOT NULL,
	`SHARED_TO_USER_ID` text NOT NULL,
	`SHARED_PAGE_ID` text NOT NULL,
	`IS_PRIVATE` integer DEFAULT 1 NOT NULL,
	`DATE_SHARED` text DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (`SHARED_FROM_USER_ID`) REFERENCES `USERS`(`USER_ID`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`SHARED_TO_USER_ID`) REFERENCES `USERS`(`USER_ID`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`SHARED_PAGE_ID`) REFERENCES `PAGES`(`PAGE_ID`) ON UPDATE no action ON DELETE cascade
);
--> statement-breakpoint
CREATE UNIQUE INDEX `one_share_per_pair` ON `SHARED_PAGES` (`SHARED_FROM_USER_ID`,`SHARED_TO_USER_ID`,`SHARED_PAGE_ID`);--> statement-breakpoint
CREATE TABLE `USERS` (
	`USER_ID` text PRIMARY KEY NOT NULL,
	`USERNAME` text NOT NULL,
	`PASSWORD_HASH` text NOT NULL,
	`EMAIL_ADDRESS` text NOT NULL,
	`DATE_CREATED` text DEFAULT CURRENT_TIMESTAMP
);
--> statement-breakpoint
CREATE UNIQUE INDEX `USERS_USERNAME_unique` ON `USERS` (`USERNAME`);--> statement-breakpoint
CREATE UNIQUE INDEX `USERS_EMAIL_ADDRESS_unique` ON `USERS` (`EMAIL_ADDRESS`);